syntax = "proto3";

package royale;

option java_package = "com.github.jpringle.royale.common";
option java_outer_classname = "SnakeProto";

enum Direction {
    LEFT = 0;
    RIGHT = 1;
    UP = 2;
    DOWN = 3;
}

// Sent from client -> server
// Request to join the game
message JoinRequest {
    string player_name = 1;
}

// Sent from server -> client
// Could be success or failure
message JoinResponse {
    oneof response {
        JoinSuccess join_success = 1;
        JoinFailure join_failure = 2;
    }
}

// placeholder
message GameInfo {
}

// Sent from client -> server
// Board is always a square
message GameState {
    int32 board_size = 1;
    repeated PlayerSnapshot players = 2;
}

// Sent from server -> client upon success
// Include the current state
// All following messages will be of type Tick
message JoinSuccess {
    GameInfo game_info = 1;
}

// Sent from server -> client upon failure
// Includes a message indicating why the request did not succeed (for example, player name already taken)
message JoinFailure {
    string message = 1;
}

// Sent from server -> client
// Indicates the current position of one player
// x,y  are always positive
message PlayerSnapshot {
    string player_name = 1;
    int32 x = 2;
    int32 y = 3;
}

// Sent from server -> client
// Server has lost connection to a player - other players should remove this player from the canvas
message PlayerDisconnected {
    string player_name = 1;
}

// Sent from client -> server
// Client requests to move in a particular direction
message MoveRequest {
    Direction direction = 1;
}

// Sent from client -> server
// For now, only movement messages
// Prob want more stuff later, so leaving this as a oneof
message ClientEvent {
    oneof event {
        MoveRequest move_request = 1;
        JoinRequest join_request = 2;
    }
}

message ServerEvent {
    oneof event {
        GameState game_state = 1;
        JoinResponse join_response = 2;
    }
}
